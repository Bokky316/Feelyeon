[깃허브]
**** 브랜치
1. 기본 브랜치 (Main Branch)
이름: main
역할: 완성된 코드만 존재하도록

2. 기능 브랜치 (Feature Branch)
이름: feat(ure)/기능명
역할: 기능별로 브랜치 생성해서 추후 서로 확인 후 메인에 병합

3. 버그 수정 브랜치 (Bugfix Branch)
이름: bugfix/버그명 또는 fix/버그명
역할: 발견된 버그 수정 -> 수정 후 메인에 병합

4. 릴리즈 브랜치 (Release Branch)
이름: release/버전번호
역할: 전반적인 부분 완성 후 버전 관리 위한 브랜치 / 버그수정이나 파일 관리 가넝

****브랜치 삭제
기능이나 버그 수정을 완료하고 병합한 후에는 해당 브랜치를 삭제 => 삭제 전 서로 확인 필수!!!!
협업 시 유의사항

****Pull Request 사용: 소스코드 변경 사항 제안 -> 검토 -> 메인브랜치 통합 요청
ㄴ 코드리뷰 : 변경 코드 검토 후 피드백 필수
ㄴ 코드 충돌 없도록 메인브랜치 통합 전에 무조건!!!! 거쳐야함

****커밋 메시지 규칙: 커밋 메시지는 명확하고 간결하게 작성, 어떤 변경이 이루어졌는지를 설명.
   - 첫 줄은 50자 이내 요약, 이후 필요하다면 상세 설명 추가 ( 변경 이유나 방법 등 )
   - 수정이나 변경 시 구체적으로 작성 _ 어떤 부분이 어떻게?
   - 양식 (예시)
          제목: 간략 요약 제공

          본문: 변경 사항에 대한 자세한 설명. (72자 이내로 줄바꿈)

          푸터: 특정이슈 + #이슈번호 << 필수는 아니나, 관련된 이슈 처리시 추가


          (사용자 인증 기능 추가

          이 커밋은 사용자가 이메일과 비밀번호를 사용하여 로그인할 수 있는 사용자 인증 기능을 추가합니다.
          입력 필드에 대한 유효성 검사와 잘못된 자격 증명에 대한 오류 처리도 포함되어 있습니다.

          이슈 해결: #123)

# 깃허브 정리
1) 각 기능 혹은 버그 수정을 위한 브랜치 생성
2) 변경 사항 커밋 (작은 단위로 커밋 ㄱㅊ으니까 자유롭게 커밋. 오히려 작은 단위로 커밋하면 되돌리기도 쉽고 좋음)
3) 원격 저장소 푸시
4) 해당 브랜치에 풀 리퀘스트 생성
5) 코드 리뷰
6) 문제 없으면(모두 동의하면) 메인에 병합
